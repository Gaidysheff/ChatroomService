[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "AsyncJsonWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "ProtocolTypeRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "ProtocolTypeRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "URLRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "AuthMiddlewareStack",
        "importPath": "channels.auth",
        "description": "channels.auth",
        "isExtraImport": true,
        "detail": "channels.auth",
        "documentation": {}
    },
    {
        "label": "Chat.routing",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "Chat.routing",
        "description": "Chat.routing",
        "detail": "Chat.routing",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "ChatConfig",
        "kind": 6,
        "importPath": "ChatroomService.Chat.apps",
        "description": "ChatroomService.Chat.apps",
        "peekOfCode": "class ChatConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'Chat'",
        "detail": "ChatroomService.Chat.apps",
        "documentation": {}
    },
    {
        "label": "ChatRoomConsumer",
        "kind": 6,
        "importPath": "ChatroomService.Chat.consumers",
        "description": "ChatroomService.Chat.consumers",
        "peekOfCode": "class ChatRoomConsumer(AsyncJsonWebsocketConsumer):\n    async def connect(self):\n        self.room_name = self.scope[\"url_route\"][\"kwargs\"][\"room_name\"]\n        self.room_group_name = \"chat_%s\" % self.room_name\n        await self.channel_layer.group_add(self.room_group_name, self.channel_name)\n        await self.accept()\n        await self.channel_layer.group_send(\n            self.room_group_name,\n            {\n                \"type\": \"tester_message\",",
        "detail": "ChatroomService.Chat.consumers",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "kind": 5,
        "importPath": "ChatroomService.Chat.routing",
        "description": "ChatroomService.Chat.routing",
        "peekOfCode": "websocket_urlpatterns = [\n    re_path(r\"ws/chat/(?P<room_name>\\w+)/$\", consumers.ChatRoomConsumer),\n]",
        "detail": "ChatroomService.Chat.routing",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ChatroomService.Chat.urls",
        "description": "ChatroomService.Chat.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.index, name=\"index\"),\n    path(\"<str:room_name>/\", views.room, name=\"room\"),\n]",
        "detail": "ChatroomService.Chat.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "ChatroomService.Chat.views",
        "description": "ChatroomService.Chat.views",
        "peekOfCode": "def index(request):\n    return render(request, \"index.html\", {})\ndef room(request, room_name):\n    return render(request, \"chatroom.html\", {\"room_name\": room_name})",
        "detail": "ChatroomService.Chat.views",
        "documentation": {}
    },
    {
        "label": "room",
        "kind": 2,
        "importPath": "ChatroomService.Chat.views",
        "description": "ChatroomService.Chat.views",
        "peekOfCode": "def room(request, room_name):\n    return render(request, \"chatroom.html\", {\"room_name\": room_name})",
        "detail": "ChatroomService.Chat.views",
        "documentation": {}
    },
    {
        "label": "django_asgi_app",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.asgi",
        "description": "ChatroomService.ChatroomService.asgi",
        "peekOfCode": "django_asgi_app = get_asgi_application()\napplication = ProtocolTypeRouter(\n    {\n        \"http\": django_asgi_app,\n    }\n)",
        "detail": "ChatroomService.ChatroomService.asgi",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.asgi",
        "description": "ChatroomService.ChatroomService.asgi",
        "peekOfCode": "application = ProtocolTypeRouter(\n    {\n        \"http\": django_asgi_app,\n    }\n)",
        "detail": "ChatroomService.ChatroomService.asgi",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.routing",
        "description": "ChatroomService.ChatroomService.routing",
        "peekOfCode": "application = ProtocolTypeRouter(\n    {\n        \"websocket\": AuthMiddlewareStack(URLRouter(Chat.routing.websocket_urlpatterns)),\n    }\n)",
        "detail": "ChatroomService.ChatroomService.routing",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-i)390=1ok4cc0!8zva8cy0a4$voij%*w$=!dnrp6-lj&%4!8j)\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-i)390=1ok4cc0!8zva8cy0a4$voij%*w$=!dnrp6-lj&%4!8j)\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"daphne\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"daphne\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"daphne\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"daphne\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"Chat\",\n    \"channels\",",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"ChatroomService.urls\"",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "ROOT_URLCONF = \"ChatroomService.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "WSGI_APPLICATION = \"ChatroomService.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nASGI_APPLICATION = \"ChatroomService.asgi.application\"",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nASGI_APPLICATION = \"ChatroomService.asgi.application\"\nCHANNEL_LAYERS = {\"default\": {\"BACKEND\": \"channels.layers.InMemoryChannelLayer\"}}",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nASGI_APPLICATION = \"ChatroomService.asgi.application\"\nCHANNEL_LAYERS = {\"default\": {\"BACKEND\": \"channels.layers.InMemoryChannelLayer\"}}",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nASGI_APPLICATION = \"ChatroomService.asgi.application\"\nCHANNEL_LAYERS = {\"default\": {\"BACKEND\": \"channels.layers.InMemoryChannelLayer\"}}",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nASGI_APPLICATION = \"ChatroomService.asgi.application\"\nCHANNEL_LAYERS = {\"default\": {\"BACKEND\": \"channels.layers.InMemoryChannelLayer\"}}",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "ASGI_APPLICATION",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "ASGI_APPLICATION = \"ChatroomService.asgi.application\"\nCHANNEL_LAYERS = {\"default\": {\"BACKEND\": \"channels.layers.InMemoryChannelLayer\"}}",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "CHANNEL_LAYERS",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.settings",
        "description": "ChatroomService.ChatroomService.settings",
        "peekOfCode": "CHANNEL_LAYERS = {\"default\": {\"BACKEND\": \"channels.layers.InMemoryChannelLayer\"}}",
        "detail": "ChatroomService.ChatroomService.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.urls",
        "description": "ChatroomService.ChatroomService.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"chat/\", include(\"Chat.urls\")),\n]",
        "detail": "ChatroomService.ChatroomService.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ChatroomService.ChatroomService.wsgi",
        "description": "ChatroomService.ChatroomService.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "ChatroomService.ChatroomService.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "ChatroomService.manage",
        "description": "ChatroomService.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ChatroomService.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "ChatroomService.manage",
        "documentation": {}
    }
]